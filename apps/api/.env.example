# ============================================
# planrrr.io - API Service Environment Variables
# ============================================
# 
# IMPORTANT: Copy this file to .env and replace with actual values
# Never commit .env file with real secrets!
#
# To generate secure secrets, run:
# node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
#
# ============================================

# ====================
# Core Configuration
# ====================

# Node Environment
NODE_ENV=development
PORT=4000
HOSTNAME=0.0.0.0

# API Version
API_VERSION=1.0.0

# ====================
# Database Configuration
# ====================

# PostgreSQL connection strings (Neon)
# Get from: https://console.neon.tech/
DATABASE_URL="postgresql://user:password@host/database?sslmode=require"
DIRECT_DATABASE_URL="postgresql://user:password@host/database?sslmode=require"

# ====================
# Redis Configuration
# ====================

# Upstash Redis (for caching, rate limiting, queue)
# Get from: https://console.upstash.com/
UPSTASH_REDIS_REST_URL="https://your-redis-instance.upstash.io"
UPSTASH_REDIS_REST_TOKEN="your-redis-token"

# ====================
# Authentication & Security
# ====================

# JWT Secrets (REQUIRED - min 32 chars each)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
JWT_SECRET=""
JWT_REFRESH_SECRET=""

# Encryption secret (REQUIRED - min 32 chars)
ENCRYPTION_SECRET=""

# Internal API Key for Worker communication (REQUIRED)
INTERNAL_API_KEY=""

# ====================
# CORS Configuration
# ====================

# Frontend URL (for CORS)
FRONTEND_URL="http://localhost:3000"
ALLOWED_ORIGINS="localhost:3000,localhost:3001"
CSRF_ALLOWED_ORIGINS="localhost:3000,localhost:3001"

# ====================
# Storage Configuration (Cloudflare R2)
# ====================

# Get credentials from: https://dash.cloudflare.com/
R2_ACCOUNT_ID=""
R2_ACCESS_KEY_ID=""
R2_SECRET_ACCESS_KEY=""
R2_BUCKET_NAME="planrrr-media"
R2_PUBLIC_URL=""

# ====================
# Monitoring & Logging
# ====================

# Sentry DSN for error tracking (optional)
SENTRY_DSN=""

# Logging level: debug | info | warn | error
LOG_LEVEL="info"

# ====================
# Rate Limiting
# ====================

# Rate limit configuration (requests per minute)
RATE_LIMIT_ENABLED="true"
RATE_LIMIT_WINDOW="60"
RATE_LIMIT_MAX_REQUESTS="100"

# ====================
# Development Settings
# ====================

# Enable debug mode (development only)
DEBUG_MODE="true"

# Allow HTTP in development
ALLOW_HTTP="true"