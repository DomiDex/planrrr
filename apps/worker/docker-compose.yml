version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: planrrr-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: planrrr
      POSTGRES_PASSWORD: planrrr_dev_password
      POSTGRES_DB: planrrr_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planrrr -d planrrr_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-test:
    image: postgres:16-alpine
    container_name: planrrr-postgres-test
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: planrrr
      POSTGRES_PASSWORD: planrrr_test_password
      POSTGRES_DB: planrrr_test
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U planrrr -d planrrr_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: planrrr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --appendfilename "redis.aof"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: planrrr-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

  adminer:
    image: adminer:latest
    container_name: planrrr-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgres

volumes:
  postgres_data:
    name: planrrr_postgres_data
  postgres_test_data:
    name: planrrr_postgres_test_data
  redis_data:
    name: planrrr_redis_data

networks:
  default:
    name: planrrr_network